C51 COMPILER V9.56.0.0   KEYPAD_SIN                                                        10/10/2017 16:37:50 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE KEYPAD_SIN
OBJECT MODULE PLACED IN .\Objects\keypad_sin.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE keypad_sin.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\keypad_sin.lst) TABS(2) OBJECT(.\Objects\keypad_sin.obj)

line level    source

   1          #include "at89c5131.h"
   2          #include "stdio.h"
   3          #include "math.h"
   4          
   5          sbit op = P0^0;
   6          int input=0,x = 0,delayMul=1;
   7          
   8          void delay_5us(int delay);
   9          void transmit_data(unsigned char str);
  10          void transmit_string(char* str,unsigned int  n);
  11          void init_serial();
  12          void outputTone(unsigned int inputInt);
  13          //unsigned int fillTable(int z);
  14          code unsigned int table[24]= {2047,2577,3070,3494,3820,4024,4094,4024,3820,3494,3070,2577,2047,1517,1023,5
             -99,274,70,0,70,274,600,1023,1517};
  15          
  16          float spi_out=0;
  17          unsigned int k=0,i=0;
  18          unsigned int dacval;
  19          unsigned char serial;
  20          //code int sin[500];
  21          
  22          sbit CS_BAR = P1^4;                 
  23          sbit LDAC_BAR = P1^3;
  24          bit transmit_completed= 0;          
  25          
  26          void SPI_Init()
  27          {
  28   1        CS_BAR = 1;                     // DISABLE ADC SLAVE SELECT-CS 
  29   1        SPCON |= 0x20;                  // P1.1(SSBAR) is available as standard I/O pin 
  30   1        SPCON |= 0x01;                  // Fclk Periph/4 AND Fclk Periph=12MHz ,HENCE SCK IE. BAUD RATE=3000KHz 
  31   1        //SPCON |= 0x82; 
  32   1        SPCON |= 0x10;                  // Master mode 
  33   1        //SPCON &= ~0x08;                 // CPOL=0; transmit mode example|| SCK is 0 at idle state
  34   1        SPCON |= 0x08;
  35   1        SPCON |= 0x04;                  // CPHA=1; transmit mode example 
  36   1        IEN1 |= 0x04;                   // enable spi interrupt 
  37   1        SPCON |= 0x40;                  // run spi;ENABLE SPI INTERFACE SPEN= 1 
  38   1        //EA = 1;
  39   1      }
  40          /*void init_table(void)
  41          {
  42          /*if(i==0){table[i]=2047;}if(i==1){table[i]=2577;}if(i==2){table[i]=3070;}if(i==3){table[i]=3494;}if(i==4)
             -{table[i]=3820;}if(i==5){table[i]=4024;}
  43          if(i==6){table[i]=4094;}if(i==7){table[i]=4024;}if(i==8){table[i]=3820;}if(i==9){table[i]=3494;}if(i==10){
             -table[i]=3070;}if(i==11){table[i]=2577;}
  44          if(i==12){table[i]=2047;}if(i==13){table[i]=1517;}if(i==14){table[i]=1023;}if(i==15){table[i]=599;}if(i==1
             -6){table[i]=274;}if(i==17){table[i]=70;}
  45          if(i==18){table[i]=0;}if(i==19){table[i]=70;}if(i==20){table[i]=274;}if(i==21){table[i]=600;}if(i==22){tab
             -le[i]=1023;}if(i==23){table[i]=1517;}
  46          
  47          //for(i=0;i<36;i++)
  48            //table[i] = fillTable(i);
  49          }*/
C51 COMPILER V9.56.0.0   KEYPAD_SIN                                                        10/10/2017 16:37:50 PAGE 2   

  50          void it_SPI(void) interrupt 9 /* interrupt address is 0x004B, (Address -3)/8 = interrupt no.*/
  51          {
  52   1        switch  ( SPSTA )         /* read and clear spi status register */
  53   1        {
  54   2          case 0x80:
  55   2            serial=SPDAT; 
  56   2            transmit_completed=1;/* set software flag */
  57   2          break;
  58   2      
  59   2          case 0x10:
  60   2               /* put here for mode fault tasking */  
  61   2          break;
  62   2        
  63   2          case 0x40:
  64   2               /* put here for overrun tasking */ 
  65   2          break;
  66   2        }
  67   1      }
  68          
  69          
  70          void dac(unsigned int dacval)
  71          {int z= 0;
  72   1        for(z=0;z<2;z++)
  73   1        {
  74   2        unsigned char sendval = 0;
  75   2          //LDAC_BAR = 0;
  76   2        sendval = (dacval >> 8) | 0x70;
  77   2        CS_BAR = 0;                 // enable ADC as slave       
  78   2        SPDAT = sendval;        // 80H written to start ADC CH0 single ended sampling,refer ADC datasheet
  79   2        while(!transmit_completed); // wait end of transmition  
  80   2        transmit_completed = 0;     // clear software transfer flag 
  81   2        sendval = dacval;
  82   2        SPDAT = sendval;        // 80H written to start ADC CH0 single ended sampling,refer ADC datasheet
  83   2        while(!transmit_completed); // wait end of transmition  
  84   2        transmit_completed = 0;     // clear software transfer flag 
  85   2        CS_BAR = 1;
  86   2        }
  87   1        //LDAC_BAR=1;
  88   1      }
  89          void main()
  90          {
  91   1      
  92   1        P2 = 0x00;                      // Make Port 2 output 
  93   1        //P1 &= 0xEF;                     // Make P1 Pin4-7 output
  94   1        P0 &= 0xF0;                     // Make Port 0 Pins 0,1,2 output
  95   1        P1 |= 0xF0;
  96   1        
  97   1        SPI_Init();
  98   1      init_serial();
  99   1      //  init_table();
 100   1      transmit_string("Tone Generator",14);
 101   1      
 102   1      while(1)
 103   1      {
 104   2        ////////////////////////////////////////first
 105   2        if(input=='z'){delayMul = 4;}
 106   2        if(input=='x'){delayMul = 2;}
 107   2        if(input=='c'){delayMul = 1;}
 108   2        ///////////////////////////////////////////////third
 109   2        while(input=='g') 
 110   2        {
 111   3          //transmit_string("g ",2);
C51 COMPILER V9.56.0.0   KEYPAD_SIN                                                        10/10/2017 16:37:50 PAGE 3   

 112   3          outputTone(454);
 113   3          //input =0;
 114   3          ////transmit_string("done ",4);
 115   3        }
 116   2        while(input=='h') 
 117   2        {
 118   3          //transmit_string("h ",2);
 119   3          outputTone(405);
 120   3          //input =0;
 121   3        }
 122   2        while(input=='j') 
 123   2        {
 124   3          //transmit_string("j ",2);
 125   3          outputTone(382);
 126   3          //input =0;
 127   3        }
 128   2        while(input=='k') 
 129   2        {
 130   3          //transmit_string("k ",2);
 131   3          outputTone(340);
 132   3          //input =0;
 133   3        }
 134   2        while(input=='l') 
 135   2        {
 136   3          //transmit_string("l ",2);
 137   3          outputTone(303);
 138   3          //input =0;
 139   3        }
 140   2        while(input=='q') 
 141   2        {
 142   3          //transmit_string("q ",2);
 143   3          outputTone(286);
 144   3          //input =0;
 145   3        }
 146   2        while(input=='w') 
 147   2        {
 148   3          //transmit_string("w ",2);
 149   3          outputTone(255);
 150   3          //input =0;
 151   3        }
 152   2        /////////////////////////////////////////fourth
 153   2        while(input=='e') 
 154   2        {
 155   3          //transmit_string("e ",2);
 156   3          outputTone(227);
 157   3          ////input =0;
 158   3          //transmit_string("done ",4);
 159   3        }
 160   2        while(input=='r') 
 161   2        {
 162   3          //transmit_string("r ",2);
 163   3          outputTone(202);
 164   3          ////input =0;
 165   3        }
 166   2        while(input=='t') 
 167   2        {
 168   3          //transmit_string("t ",2);
 169   3          outputTone(191);
 170   3          ////input =0;
 171   3        }
 172   2        while(input=='y') 
 173   2        {
C51 COMPILER V9.56.0.0   KEYPAD_SIN                                                        10/10/2017 16:37:50 PAGE 4   

 174   3          //transmit_string("y ",2);
 175   3          outputTone(170);
 176   3          ////input =0;
 177   3        }
 178   2        while(input=='u') 
 179   2        {
 180   3          //transmit_string("u ",2);
 181   3          outputTone(151);
 182   3          //input =0;
 183   3        }
 184   2        while(input=='i') 
 185   2        {
 186   3          //transmit_string("i ",2);
 187   3          outputTone(143);
 188   3          //input =0;
 189   3        }
 190   2        while(input=='o') 
 191   2        {
 192   3          //transmit_string("o ",2);
 193   3          outputTone(127);
 194   3          //input =0;
 195   3        }
 196   2        //////////////////////////////////////////////////////// only p
 197   2        while(input=='p') 
 198   2        {
 199   3          //transmit_string("p ",2);
 200   3          outputTone(114);
 201   3          //input =0;
 202   3        }
 203   2        ///////////////////////////////////////    middle black ones part-1 of 2
 204   2        while(input=='!') 
 205   2        {
 206   3          //transmit_string("1 ",2);
 207   3          outputTone(1716);
 208   3          //input =0;
 209   3          //transmit_string("done ",4);
 210   3        }
 211   2        while(input=='@') 
 212   2        {
 213   3          //transmit_string("2 ",2);
 214   3          outputTone(1443);
 215   3          //input =0;
 216   3        }
 217   2        while(input=='#') 
 218   2        {
 219   3          //transmit_string("3 ",2);
 220   3          outputTone(1286);
 221   3          //input =0;
 222   3        }
 223   2        while(input=='$') 
 224   2        {
 225   3          //transmit_string("4 ",2);
 226   3          outputTone(1081);
 227   3          //input =0;
 228   3        }
 229   2        while(input=='%') 
 230   2        {
 231   3          //transmit_string("5 ",2);
 232   3          outputTone(963);
 233   3          //input =0;
 234   3        }
 235   2        while(input=='^') 
C51 COMPILER V9.56.0.0   KEYPAD_SIN                                                        10/10/2017 16:37:50 PAGE 5   

 236   2        {
 237   3          //transmit_string("6 ",2);
 238   3          outputTone(858);
 239   3          //input =0;
 240   3        }
 241   2        while(input=='&') 
 242   2        {
 243   3          //transmit_string("7 ",2);
 244   3          outputTone(722);
 245   3          //input =0;
 246   3        }
 247   2        while(input=='*') 
 248   2        {
 249   3          //transmit_string("8 ",2);
 250   3          outputTone(643);
 251   3          //input =0;
 252   3        }
 253   2        while(input=='(') 
 254   2        {
 255   3          //transmit_string("9 ",2);
 256   3          outputTone(540);
 257   3          //input =0;
 258   3        }
 259   2        while(input==')') 
 260   2        {
 261   3          //transmit_string("0 ",2);
 262   3          outputTone(482);
 263   3          //input =0;
 264   3        }
 265   2        //////////////////////////////////////////// middle black ones part2 of 2
 266   2        while(input=='1') 
 267   2        {
 268   3          //transmit_string("! ",2);
 269   3          outputTone(429);
 270   3          //input =0;
 271   3          //transmit_string("done ",4);
 272   3        }
 273   2        while(input=='2') 
 274   2        {
 275   3          //transmit_string("@ ",2);
 276   3          outputTone(361);
 277   3          //input =0;
 278   3        }
 279   2        while(input=='3') 
 280   2        {
 281   3          //transmit_string("# ",2);
 282   3          outputTone(321);
 283   3          //input =0;
 284   3        }
 285   2        while(input=='4') 
 286   2        {
 287   3          //transmit_string("$ ",2);
 288   3          outputTone(270);
 289   3          //input =0;
 290   3        }
 291   2        while(input=='5') 
 292   2        {
 293   3          //transmit_string("% ",2);
 294   3          outputTone(241);
 295   3          //input =0;
 296   3        }
 297   2        while(input=='6') 
C51 COMPILER V9.56.0.0   KEYPAD_SIN                                                        10/10/2017 16:37:50 PAGE 6   

 298   2        {
 299   3          //transmit_string("^ ",2);
 300   3          outputTone(214);
 301   3          //input =0;
 302   3        }
 303   2        while(input=='7') 
 304   2        {
 305   3          //transmit_string("& ",2);
 306   3          outputTone(180);
 307   3          //input =0;
 308   3        }
 309   2        while(input=='8') 
 310   2        {
 311   3          //transmit_string("* ",2);
 312   3          outputTone(161);
 313   3          //input =0;
 314   3        }
 315   2        while(input=='9') 
 316   2        {
 317   3          //transmit_string("( ",2);
 318   3          outputTone(135);
 319   3          //input =0;
 320   3        }
 321   2        while(input=='0') 
 322   2        {
 323   3          //transmit_string(") ",2);
 324   3          outputTone(120);
 325   3          //input =0;
 326   3        }
 327   2      }
 328   1      
 329   1      }
 330          //-----------------------------------------outputTone-----------------------------
 331          void outputTone(unsigned int inputInt)
 332          {
 333   1        //x=10000/(inputInt*delayMul);
 334   1        //while(x>0)
 335   1        //{
 336   1          /*for(i=0;i<24;i++)
 337   1          {
 338   1          //spi_out= fillTable(i);
 339   1          //spi_out = 2047*(1+spi_out); 
 340   1            if(i==0){dac(2047);}if(i==1){dac(2577);}if(i==2){dac(3070);}if(i==3){dac(3494);}if(i==4){dac(3820);}if(
             -i==5){dac(4024);}
 341   1      if(i==6){dac(4094);}if(i==7){dac(4024);}if(i==8){dac(3820);}if(i==9){dac(3494);}if(i==10){dac(3070);}if(i=
             -=11){dac(2577);}
 342   1      if(i==12){dac(2047);}if(i==13){dac(1517);}if(i==14){dac(1023);}if(i==15){dac(599);}if(i==16){dac(274);}if(
             -i==17){dac(70);}
 343   1      if(i==18){dac(0);}if(i==19){dac(70);}if(i==20){dac(274);}if(i==21){dac(600);}if(i==22){dac(1023);}if(i==23
             -){dac(1517);}
 344   1          //dac(dacval);
 345   1          delay_5us(inputInt*delayMul*0.0416667);
 346   1          }*/
 347   1        for(k=0;k<24;k++)
 348   1          {
 349   2          dac(table[k]);
 350   2          delay_5us(inputInt*delayMul*0.0041667);
 351   2          }
 352   1          //x--;
 353   1        //}
 354   1      }
 355          //-----------------------------------------receive_data---------------------------
C51 COMPILER V9.56.0.0   KEYPAD_SIN                                                        10/10/2017 16:37:50 PAGE 7   

 356          void receive_data(void) interrupt 4
 357          {
 358   1      if(RI==1)
 359   1      {
 360   2        RI=0;
 361   2        input = SBUF;
 362   2      
 363   2      }
 364   1      else if(TI==1)
 365   1      {
 366   2        TI=0;
 367   2      }
 368   1      }
 369          //////////////////////////////////////////////////////////////////////////////////
 370          void transmit_string(char* str,unsigned char  n)
 371          {
*** WARNING C235 IN LINE 371 OF keypad_sin.c: parameter 2: different types
 372   1      //function to transmit string of size n over TxD pin.
 373   1      while(n>0)
 374   1        {
 375   2          transmit_data(*str);
 376   2          str++;
 377   2          n--;
 378   2          TI=0;
 379   2        }
 380   1      }
 381          ////////////////////////////////////////////////////////////////////////////////////////
 382          void transmit_data(unsigned char str)
 383          {
 384   1      //function to transmit data over TxD pin.
 385   1        EA = 0; 
 386   1        ACC = str;
 387   1        ACC = ACC+0;
 388   1        TB8 = PSW^0;
 389   1        SBUF = str;
 390   1        while(TI==0);
 391   1        EA =1;
 392   1      }
 393          //////////////////////////////////////////////////////////////////////////////////////////
 394          void init_serial()
 395          {
 396   1      //Initialize serial communication and interrupts
 397   1        SCON |= 0xD0;
 398   1        EA = 1;
 399   1        ES =1;
 400   1        TMOD |= 0x20;
 401   1        TH1 = 0xcc;
 402   1        TR1 = 1;
 403   1      }
 404          ////////////////////////////////////////////////////////////////////////////////////////////
 405          void delay_5us(int delay)
 406          {
 407   1        int d=0;
 408   1        while(delay>0)
 409   1        {
 410   2          for(d=0;d<2;d++);
 411   2          delay--;
 412   2        }
 413   1      }
 414          /*unsigned int fillTable(unsigned int z)
 415          {
 416               return 2046*(1+sin(2.0*3.1415927*z*0.02778));
C51 COMPILER V9.56.0.0   KEYPAD_SIN                                                        10/10/2017 16:37:50 PAGE 8   

 417          }*/
 418            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    985    ----
   CONSTANT SIZE    =     63    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
