C51 COMPILER V9.56.0.0   MUSICGEN                                                          09/25/2017 22:11:39 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MUSICGEN
OBJECT MODULE PLACED IN .\Objects\musicGen.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE musicGen.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -musicGen.lst) TABS(2) OBJECT(.\Objects\musicGen.obj)

line level    source

   1          #include "at89c5131.h"
   2          #include "stdio.h"
   3          
   4          sbit op = P0^0;
   5          int input=0,x = 0;
   6          
   7          void delay_5us(int delay);
   8          void transmit_data(unsigned char str);
   9          void transmit_string(char* str,unsigned int  n);
  10          void init_serial();
  11          void outputTone(unsigned int inputInt);
  12          //void ISR_Serial(void);
  13          //-------------------------------------------------MAIN--------------------------
  14          void main()
  15          {
  16   1      P1 = 0x00;  //JUST TO SAVE POWER :P
  17   1      P0 = 0x00;  // making P0^1 AS OUTPUT is enough though
  18   1      init_serial();
  19   1      transmit_string("Welcome to Sharan's Music Tone Generator!",41);
  20   1      
  21   1      
  22   1      while(1)
  23   1      {
  24   2        ////////////////////////////////////////first
  25   2        while(input=='z') 
  26   2        {
  27   3          //transmit_string("z ",2);
  28   3          outputTone(1818);
  29   3          //input =0;
  30   3          //transmit_string("done ",4);
  31   3        }
  32   2        while(input=='x') 
  33   2        {
  34   3          //transmit_string("x ",2);
  35   3          outputTone(1620);
  36   3          //input =0;
  37   3        }
  38   2        while(input=='c') 
  39   2        {
  40   3          //transmit_string("c ",2);
  41   3          outputTone(1529);
  42   3          //input =0;
  43   3        }
  44   2        while(input=='v') 
  45   2        {
  46   3          //transmit_string("v ",2);
  47   3          outputTone(1362);
  48   3          //input =0;
  49   3        }
  50   2        while(input=='b') 
  51   2        {
  52   3          //transmit_string("b ",2);
  53   3          outputTone(1213);
  54   3          //input =0;
C51 COMPILER V9.56.0.0   MUSICGEN                                                          09/25/2017 22:11:39 PAGE 2   

  55   3        }
  56   2        while(input=='n') 
  57   2        {
  58   3          //transmit_string("n ",2);
  59   3          outputTone(1145);
  60   3          //input =0;
  61   3        }
  62   2        while(input=='m') 
  63   2        {
  64   3          //transmit_string("m ",2);
  65   3          outputTone(1020);
  66   3          //input =0;
  67   3        }
  68   2        //////////////////////////second
  69   2        while(input==',') 
  70   2        {
  71   3          //transmit_string(", ",2);
  72   3          outputTone(909);
  73   3          //input =0;
  74   3          ////transmit_string("done ",4);
  75   3        }
  76   2        while(input=='.') 
  77   2        {
  78   3          //transmit_string(". ",2);
  79   3          outputTone(809);
  80   3          //input =0;
  81   3        }
  82   2        while(input=='/') 
  83   2        {
  84   3          //transmit_string("/ ",2);
  85   3          outputTone(764);
  86   3          //input =0;
  87   3        }
  88   2        while(input=='a') 
  89   2        {
  90   3          //transmit_string("a ",2);
  91   3          outputTone(681);
  92   3          //input =0;
  93   3        }
  94   2        while(input=='s') 
  95   2        {
  96   3          //transmit_string("s ",2);
  97   3          outputTone(607);
  98   3          //input =0;
  99   3        }
 100   2        while(input=='d') 
 101   2        {
 102   3          //transmit_string("d ",2);
 103   3          outputTone(573);
 104   3          //input =0;
 105   3        }
 106   2        while(input=='f') 
 107   2        {
 108   3          //transmit_string("f ",2);
 109   3          outputTone(510);
 110   3          //input =0;
 111   3        }
 112   2        ///////////////////////////////////////////////third
 113   2        while(input=='g') 
 114   2        {
 115   3          //transmit_string("g ",2);
 116   3          outputTone(454);
C51 COMPILER V9.56.0.0   MUSICGEN                                                          09/25/2017 22:11:39 PAGE 3   

 117   3          //input =0;
 118   3          ////transmit_string("done ",4);
 119   3        }
 120   2        while(input=='h') 
 121   2        {
 122   3          //transmit_string("h ",2);
 123   3          outputTone(405);
 124   3          //input =0;
 125   3        }
 126   2        while(input=='j') 
 127   2        {
 128   3          //transmit_string("j ",2);
 129   3          outputTone(382);
 130   3          //input =0;
 131   3        }
 132   2        while(input=='k') 
 133   2        {
 134   3          //transmit_string("k ",2);
 135   3          outputTone(340);
 136   3          //input =0;
 137   3        }
 138   2        while(input=='l') 
 139   2        {
 140   3          //transmit_string("l ",2);
 141   3          outputTone(303);
 142   3          //input =0;
 143   3        }
 144   2        while(input=='q') 
 145   2        {
 146   3          //transmit_string("q ",2);
 147   3          outputTone(286);
 148   3          //input =0;
 149   3        }
 150   2        while(input=='w') 
 151   2        {
 152   3          //transmit_string("w ",2);
 153   3          outputTone(255);
 154   3          //input =0;
 155   3        }
 156   2        /////////////////////////////////////////fourth
 157   2        while(input=='e') 
 158   2        {
 159   3          //transmit_string("e ",2);
 160   3          outputTone(227);
 161   3          ////input =0;
 162   3          //transmit_string("done ",4);
 163   3        }
 164   2        while(input=='r') 
 165   2        {
 166   3          //transmit_string("r ",2);
 167   3          outputTone(202);
 168   3          ////input =0;
 169   3        }
 170   2        while(input=='t') 
 171   2        {
 172   3          //transmit_string("t ",2);
 173   3          outputTone(191);
 174   3          ////input =0;
 175   3        }
 176   2        while(input=='y') 
 177   2        {
 178   3          //transmit_string("y ",2);
C51 COMPILER V9.56.0.0   MUSICGEN                                                          09/25/2017 22:11:39 PAGE 4   

 179   3          outputTone(170);
 180   3          ////input =0;
 181   3        }
 182   2        while(input=='u') 
 183   2        {
 184   3          //transmit_string("u ",2);
 185   3          outputTone(151);
 186   3          //input =0;
 187   3        }
 188   2        while(input=='i') 
 189   2        {
 190   3          //transmit_string("i ",2);
 191   3          outputTone(143);
 192   3          //input =0;
 193   3        }
 194   2        while(input=='o') 
 195   2        {
 196   3          //transmit_string("o ",2);
 197   3          outputTone(127);
 198   3          //input =0;
 199   3        }
 200   2        //////////////////////////////////////////////////////// only p
 201   2        while(input=='p') 
 202   2        {
 203   3          //transmit_string("p ",2);
 204   3          outputTone(114);
 205   3          //input =0;
 206   3        }
 207   2        ///////////////////////////////////////    middle black ones part-1 of 2
 208   2        while(input=='1') 
 209   2        {
 210   3          //transmit_string("1 ",2);
 211   3          outputTone(1716);
 212   3          //input =0;
 213   3          //transmit_string("done ",4);
 214   3        }
 215   2        while(input=='2') 
 216   2        {
 217   3          //transmit_string("2 ",2);
 218   3          outputTone(1443);
 219   3          //input =0;
 220   3        }
 221   2        while(input=='3') 
 222   2        {
 223   3          //transmit_string("3 ",2);
 224   3          outputTone(1286);
 225   3          //input =0;
 226   3        }
 227   2        while(input=='4') 
 228   2        {
 229   3          //transmit_string("4 ",2);
 230   3          outputTone(1081);
 231   3          //input =0;
 232   3        }
 233   2        while(input=='5') 
 234   2        {
 235   3          //transmit_string("5 ",2);
 236   3          outputTone(963);
 237   3          //input =0;
 238   3        }
 239   2        while(input=='6') 
 240   2        {
C51 COMPILER V9.56.0.0   MUSICGEN                                                          09/25/2017 22:11:39 PAGE 5   

 241   3          //transmit_string("6 ",2);
 242   3          outputTone(858);
 243   3          //input =0;
 244   3        }
 245   2        while(input=='7') 
 246   2        {
 247   3          //transmit_string("7 ",2);
 248   3          outputTone(722);
 249   3          //input =0;
 250   3        }
 251   2        while(input=='8') 
 252   2        {
 253   3          //transmit_string("8 ",2);
 254   3          outputTone(643);
 255   3          //input =0;
 256   3        }
 257   2        while(input=='9') 
 258   2        {
 259   3          //transmit_string("9 ",2);
 260   3          outputTone(540);
 261   3          //input =0;
 262   3        }
 263   2        while(input=='0') 
 264   2        {
 265   3          //transmit_string("0 ",2);
 266   3          outputTone(482);
 267   3          //input =0;
 268   3        }
 269   2        //////////////////////////////////////////// middle black ones part2 of 2
 270   2        while(input=='!') 
 271   2        {
 272   3          //transmit_string("! ",2);
 273   3          outputTone(429);
 274   3          //input =0;
 275   3          //transmit_string("done ",4);
 276   3        }
 277   2        while(input=='@') 
 278   2        {
 279   3          //transmit_string("@ ",2);
 280   3          outputTone(361);
 281   3          //input =0;
 282   3        }
 283   2        while(input=='#') 
 284   2        {
 285   3          //transmit_string("# ",2);
 286   3          outputTone(321);
 287   3          //input =0;
 288   3        }
 289   2        while(input=='$') 
 290   2        {
 291   3          //transmit_string("$ ",2);
 292   3          outputTone(270);
 293   3          //input =0;
 294   3        }
 295   2        while(input=='%') 
 296   2        {
 297   3          //transmit_string("% ",2);
 298   3          outputTone(241);
 299   3          //input =0;
 300   3        }
 301   2        while(input=='^') 
 302   2        {
C51 COMPILER V9.56.0.0   MUSICGEN                                                          09/25/2017 22:11:39 PAGE 6   

 303   3          //transmit_string("^ ",2);
 304   3          outputTone(214);
 305   3          //input =0;
 306   3        }
 307   2        while(input=='&') 
 308   2        {
 309   3          //transmit_string("& ",2);
 310   3          outputTone(180);
 311   3          //input =0;
 312   3        }
 313   2        while(input=='*') 
 314   2        {
 315   3          //transmit_string("* ",2);
 316   3          outputTone(161);
 317   3          //input =0;
 318   3        }
 319   2        while(input=='(') 
 320   2        {
 321   3          //transmit_string("( ",2);
 322   3          outputTone(135);
 323   3          //input =0;
 324   3        }
 325   2        while(input==')') 
 326   2        {
 327   3          //transmit_string(") ",2);
 328   3          outputTone(120);
 329   3          //input =0;
 330   3        }
 331   2        
 332   2        ////////////////////////////////////////////       END
 333   2      
 334   2      }
 335   1      }
 336          //-----------------------------------------outputTone-----------------------------
 337          void outputTone(unsigned int inputInt)
 338          {
 339   1        x=10000/inputInt;
 340   1        while(x>0)
 341   1        {
 342   2          op = 1;
 343   2          delay_5us(inputInt);
 344   2          op = 0;
 345   2          delay_5us(inputInt);
 346   2          x--;
 347   2        }
 348   1      }
 349          //-----------------------------------------receive_data---------------------------
 350          void receive_data(void) interrupt 4
 351          {
 352   1      if(RI==1)
 353   1      {
 354   2        RI=0;
 355   2        input = SBUF;
 356   2      
 357   2      }
 358   1      else if(TI==1)
 359   1      {
 360   2        TI=0;
 361   2      }
 362   1      }
 363          //////////////////////////////////////////////////////////////////////////////////
 364          void transmit_string(char* str,unsigned char  n)
C51 COMPILER V9.56.0.0   MUSICGEN                                                          09/25/2017 22:11:39 PAGE 7   

 365          {
*** WARNING C235 IN LINE 365 OF musicGen.c: parameter 2: different types
 366   1      //function to transmit string of size n over TxD pin.
 367   1      while(n>0)
 368   1        {
 369   2          transmit_data(*str);
 370   2          str++;
 371   2          n--;
 372   2          TI=0;
 373   2        }
 374   1      }
 375          ////////////////////////////////////////////////////////////////////////////////////////
 376          void transmit_data(unsigned char str)
 377          {
 378   1      //function to transmit data over TxD pin.
 379   1        EA = 0; 
 380   1        ACC = str;
 381   1        ACC = ACC+0;
 382   1        TB8 = PSW^0;
 383   1        SBUF = str;
 384   1        while(TI==0);
 385   1        EA =1;
 386   1      }
 387          //////////////////////////////////////////////////////////////////////////////////////////
 388          void init_serial()
 389          {
 390   1      //Initialize serial communication and interrupts
 391   1        SCON |= 0xD0;
 392   1        EA = 1;
 393   1        ES =1;
 394   1        TMOD |= 0x20;
 395   1        TH1 = 0xcc;
 396   1        TR1 = 1;
 397   1      }
 398          ////////////////////////////////////////////////////////////////////////////////////////////
 399          void delay_5us(int delay)
 400          {
 401   1        int d=0;
 402   1        while(delay>0)
 403   1        {
 404   2          for(d=0;d<2;d++);
 405   2          delay--;
 406   2        }
 407   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1046    ----
   CONSTANT SIZE    =     42    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
